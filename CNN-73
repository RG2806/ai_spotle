{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled12.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/RG2806/ai_spotle/blob/master/CNN-73\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VCh_pXZ0Zqz1",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 118
        },
        "outputId": "c6e803f2-ec4f-4101-fa9e-5113e65bde3d"
      },
      "source": [
        "!git clone https://github.com/RG2806/ai_spotle.git"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Cloning into 'ai_spotle'...\n",
            "remote: Enumerating objects: 9, done.\u001b[K\n",
            "remote: Counting objects: 100% (9/9), done.\u001b[K\n",
            "remote: Compressing objects: 100% (7/7), done.\u001b[K\n",
            "remote: Total 9 (delta 1), reused 2 (delta 0), pack-reused 0\u001b[K\n",
            "Unpacking objects: 100% (9/9), done.\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "k2zYZ0IRZ35w",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "%matplotlib inline\n",
        "import matplotlib.pyplot as plt\n",
        "import cv2\n",
        "import numpy as np\n",
        "from keras.utils import to_categorical\n",
        "from sklearn.model_selection import train_test_split\n",
        "\n",
        "from keras.models import Sequential #Initialise our neural network model as a sequential network\n",
        "from keras.layers import Conv2D #Convolution operation\n",
        "from keras.layers.normalization import BatchNormalization\n",
        "from keras.regularizers import l2\n",
        "from keras.layers import Activation#Applies activation function\n",
        "from keras.layers import Dropout#Prevents overfitting by randomly converting few outputs to zero\n",
        "from keras.layers import MaxPooling2D # Maxpooling function\n",
        "from keras.layers import Flatten # Converting 2D arrays into a 1D linear vector\n",
        "from keras.layers import Dense # Regular fully connected neural network\n",
        "from keras import optimizers\n",
        "from keras.callbacks import ReduceLROnPlateau, EarlyStopping, TensorBoard, ModelCheckpoint\n",
        "from sklearn.metrics import accuracy_score\n",
        "\n",
        "import pandas as pd\n",
        "import keras \n",
        "from keras.models import Sequential\n",
        "from keras.layers import Conv2D, BatchNormalization, GlobalAveragePooling2D, MaxPooling2D, Dropout, Flatten, Dense\n",
        "from keras.callbacks import ModelCheckpoint, EarlyStopping, ReduceLROnPlateau\n",
        "from keras.utils import np_utils\n",
        "import keras.backend as k\n",
        "from keras.preprocessing import image\n",
        "from keras.preprocessing.image import ImageDataGenerator\n",
        "from keras.optimizers import Adam\n",
        "from keras.regularizers import l2\n",
        "from tensorflow.keras.preprocessing.image import ImageDataGenerator\n",
        "from tensorflow.keras.layers import AveragePooling2D\n",
        "from tensorflow.keras.layers import Dropout\n",
        "from tensorflow.keras.layers import Flatten\n",
        "from tensorflow.keras.layers import Dense\n",
        "from tensorflow.keras.layers import Input\n",
        "from tensorflow.keras.models import Model\n",
        "from tensorflow.keras.optimizers import Adam\n",
        "from tensorflow.keras.applications import ResNet50\n",
        "from sklearn.metrics import classification_report\n",
        "from imutils import paths"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "khmywcbkbgZD",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def load_data(dataset_path):\n",
        "  \n",
        "  classes = ['Fear', 'Happy', 'Sad']  #We will be dealing with seven different types of emotions.\n",
        "\n",
        "  data = []\n",
        "  labels =[]\n",
        "\n",
        "  with open(dataset_path, 'r') as file:\n",
        "      for line_no, line in enumerate(file.readlines()):\n",
        "          if 0 < line_no <= 35887:\n",
        "            line = line.split(',')\n",
        "            image_data = np.asarray([int(x) for x in line[1:]]).reshape(48, 48)#Creating a list out of the string then converting it into a 2-Dimensional numpy array.\n",
        "            image_data =image_data.astype(np.uint8)\n",
        "            grayImage = cv2.cvtColor(image_data, cv2.COLOR_GRAY2BGR)\n",
        "            #color_img = cv2.cvtColor(grayImage, cv.CV_GRAY2RGB)\n",
        "            color_img=cv2.resize(grayImage,(224,224))\n",
        "            data.append(np.asarray(color_img).reshape(224,224,3))\n",
        "            labels.append(classes.index(line[0]))\n",
        "      data = np.expand_dims(data, -1)   \n",
        "      #labels = to_categorical(labels, num_classes = 3)\n",
        "    \n",
        "      return np.array(data), np.array(labels)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Gt_d1_J8cUU_",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "4587f5e9-6df6-477d-ea69-fbffa6f98a77"
      },
      "source": [
        "dataset_path = \"/content/ai_spotle/aithon2020_level2_traning.csv\" \n",
        "train_data, train_labels = load_data(dataset_path)\n",
        "train_data=train_data.reshape(10817,224,224,3)\n",
        "#train_data, test_data, train_labels, test_labels = train_test_split(data, labels, test_size = test_size,random_state = seed)\n",
        "\n",
        "print(\"Number of images in Training set:\", len(train_data))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Number of images in Training set: 10817\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CPgk624hfuGI",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "74bf55b2-627c-462c-bd94-74cda1715c8e"
      },
      "source": [
        "train_data.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(10817, 224, 224, 3)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "g3uGfxm1cgVA",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "\n",
        "x_train, x_test, y_train, y_test = train_test_split(train_data, train_labels, test_size=0.2, random_state=101)\n",
        "y_train = np_utils.to_categorical(y_train, 3)\n",
        "y_test = np_utils.to_categorical(y_test, 3)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "saBwXLdIdwaY",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 50
        },
        "outputId": "670855e9-9826-47fa-fc73-3a14004b7d4e"
      },
      "source": [
        "baseModel = ResNet50(weights=\"imagenet\", include_top=False,\n",
        "\tinput_tensor=Input(shape=(224, 224, 3)))\n",
        "# construct the head of the model that will be placed on top of the\n",
        "# the base model\n",
        "headModel = baseModel.output\n",
        "headModel = AveragePooling2D(pool_size=(7, 7))(headModel)\n",
        "headModel = Flatten(name=\"flatten\")(headModel)\n",
        "headModel = Dense(256, activation=\"relu\")(headModel)\n",
        "headModel = Dropout(0.5)(headModel)\n",
        "headModel = Dense(3, activation=\"softmax\")(headModel)\n",
        "# place the head FC model on top of the base model (this will become\n",
        "# the actual model we will train)\n",
        "model = Model(inputs=baseModel.input, outputs=headModel)\n",
        "# loop over all layers in the base model and freeze them so they will\n",
        "# *not* be updated during the training process\n",
        "for layer in baseModel.layers:\n",
        "\tlayer.trainable = False\n",
        "\n",
        "opt = Adam(lr=1e-4, decay=1e-4/ 100)\n",
        "model.compile(loss=\"categorical_crossentropy\", optimizer=opt,\n",
        "\tmetrics=[\"accuracy\"])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Downloading data from https://storage.googleapis.com/tensorflow/keras-applications/resnet/resnet50_weights_tf_dim_ordering_tf_kernels_notop.h5\n",
            "94773248/94765736 [==============================] - 1s 0us/step\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TH8UogCyfJQ1",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "17fe869a-513c-434e-cc0f-756443ed47f4"
      },
      "source": [
        "# With Augmentation\n",
        "bs = 32\n",
        "epochs = 100\n",
        "checkpointer = ModelCheckpoint('../input/model.h5', monitor='val_loss', verbose=1, save_best_only=True)\n",
        "\n",
        "callbacks = [checkpointer]\n",
        "aug = ImageDataGenerator(rotation_range=20, \n",
        "                         width_shift_range=0.1, \n",
        "                         height_shift_range=0.1, \n",
        "                         horizontal_flip=True, \n",
        "                         fill_mode=\"nearest\")\n",
        "\n",
        "H = model.fit_generator(aug.flow(x_train, y_train, batch_size=bs),\n",
        "                        validation_data=(x_test, y_test), \n",
        "                        steps_per_epoch=len(x_train)//bs,\n",
        "                        shuffle=True,\n",
        "                        callbacks=callbacks,\n",
        "                        epochs=epochs)"
      ],
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:From <ipython-input-8-fa437e504a51>:18: Model.fit_generator (from tensorflow.python.keras.engine.training) is deprecated and will be removed in a future version.\n",
            "Instructions for updating:\n",
            "Please use Model.fit, which supports generators.\n",
            "Epoch 1/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 1.0145 - accuracy: 0.5299\n",
            "Epoch 00001: val_loss improved from inf to 0.83865, saving model to ../input/model.h5\n",
            "270/270 [==============================] - 100s 369ms/step - loss: 1.0145 - accuracy: 0.5299 - val_loss: 0.8386 - val_accuracy: 0.6132\n",
            "Epoch 2/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.8759 - accuracy: 0.5990\n",
            "Epoch 00002: val_loss improved from 0.83865 to 0.79618, saving model to ../input/model.h5\n",
            "270/270 [==============================] - 97s 359ms/step - loss: 0.8759 - accuracy: 0.5990 - val_loss: 0.7962 - val_accuracy: 0.6368\n",
            "Epoch 3/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.8314 - accuracy: 0.6268\n",
            "Epoch 00003: val_loss improved from 0.79618 to 0.78804, saving model to ../input/model.h5\n",
            "270/270 [==============================] - 96s 357ms/step - loss: 0.8314 - accuracy: 0.6268 - val_loss: 0.7880 - val_accuracy: 0.6349\n",
            "Epoch 4/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.7934 - accuracy: 0.6390\n",
            "Epoch 00004: val_loss improved from 0.78804 to 0.75772, saving model to ../input/model.h5\n",
            "270/270 [==============================] - 97s 361ms/step - loss: 0.7934 - accuracy: 0.6390 - val_loss: 0.7577 - val_accuracy: 0.6488\n",
            "Epoch 5/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.7862 - accuracy: 0.6535\n",
            "Epoch 00005: val_loss improved from 0.75772 to 0.74620, saving model to ../input/model.h5\n",
            "270/270 [==============================] - 99s 366ms/step - loss: 0.7862 - accuracy: 0.6535 - val_loss: 0.7462 - val_accuracy: 0.6654\n",
            "Epoch 6/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.7666 - accuracy: 0.6562\n",
            "Epoch 00006: val_loss improved from 0.74620 to 0.72958, saving model to ../input/model.h5\n",
            "270/270 [==============================] - 99s 365ms/step - loss: 0.7666 - accuracy: 0.6562 - val_loss: 0.7296 - val_accuracy: 0.6784\n",
            "Epoch 7/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.7470 - accuracy: 0.6680\n",
            "Epoch 00007: val_loss did not improve from 0.72958\n",
            "270/270 [==============================] - 99s 367ms/step - loss: 0.7470 - accuracy: 0.6680 - val_loss: 0.7402 - val_accuracy: 0.6622\n",
            "Epoch 8/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.7393 - accuracy: 0.6739\n",
            "Epoch 00008: val_loss did not improve from 0.72958\n",
            "270/270 [==============================] - 100s 370ms/step - loss: 0.7393 - accuracy: 0.6739 - val_loss: 0.7332 - val_accuracy: 0.6636\n",
            "Epoch 9/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.7269 - accuracy: 0.6833\n",
            "Epoch 00009: val_loss improved from 0.72958 to 0.71100, saving model to ../input/model.h5\n",
            "270/270 [==============================] - 101s 374ms/step - loss: 0.7269 - accuracy: 0.6833 - val_loss: 0.7110 - val_accuracy: 0.6885\n",
            "Epoch 10/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.7194 - accuracy: 0.6855\n",
            "Epoch 00010: val_loss did not improve from 0.71100\n",
            "270/270 [==============================] - 100s 371ms/step - loss: 0.7194 - accuracy: 0.6855 - val_loss: 0.7132 - val_accuracy: 0.6784\n",
            "Epoch 11/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.7049 - accuracy: 0.6877\n",
            "Epoch 00011: val_loss improved from 0.71100 to 0.70858, saving model to ../input/model.h5\n",
            "270/270 [==============================] - 100s 370ms/step - loss: 0.7049 - accuracy: 0.6877 - val_loss: 0.7086 - val_accuracy: 0.6876\n",
            "Epoch 12/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.7040 - accuracy: 0.6908\n",
            "Epoch 00012: val_loss improved from 0.70858 to 0.69460, saving model to ../input/model.h5\n",
            "270/270 [==============================] - 99s 368ms/step - loss: 0.7040 - accuracy: 0.6908 - val_loss: 0.6946 - val_accuracy: 0.6927\n",
            "Epoch 13/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.6949 - accuracy: 0.6926\n",
            "Epoch 00013: val_loss improved from 0.69460 to 0.69092, saving model to ../input/model.h5\n",
            "270/270 [==============================] - 99s 366ms/step - loss: 0.6949 - accuracy: 0.6926 - val_loss: 0.6909 - val_accuracy: 0.6955\n",
            "Epoch 14/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.6822 - accuracy: 0.7034\n",
            "Epoch 00014: val_loss improved from 0.69092 to 0.68680, saving model to ../input/model.h5\n",
            "270/270 [==============================] - 100s 370ms/step - loss: 0.6822 - accuracy: 0.7034 - val_loss: 0.6868 - val_accuracy: 0.6978\n",
            "Epoch 15/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.6765 - accuracy: 0.7058\n",
            "Epoch 00015: val_loss did not improve from 0.68680\n",
            "270/270 [==============================] - 99s 368ms/step - loss: 0.6765 - accuracy: 0.7058 - val_loss: 0.6946 - val_accuracy: 0.6950\n",
            "Epoch 16/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.6720 - accuracy: 0.7039\n",
            "Epoch 00016: val_loss improved from 0.68680 to 0.68416, saving model to ../input/model.h5\n",
            "270/270 [==============================] - 98s 364ms/step - loss: 0.6720 - accuracy: 0.7039 - val_loss: 0.6842 - val_accuracy: 0.7001\n",
            "Epoch 17/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.6686 - accuracy: 0.7073\n",
            "Epoch 00017: val_loss did not improve from 0.68416\n",
            "270/270 [==============================] - 99s 365ms/step - loss: 0.6686 - accuracy: 0.7073 - val_loss: 0.6873 - val_accuracy: 0.6927\n",
            "Epoch 18/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.6670 - accuracy: 0.7129\n",
            "Epoch 00018: val_loss improved from 0.68416 to 0.67922, saving model to ../input/model.h5\n",
            "270/270 [==============================] - 97s 360ms/step - loss: 0.6670 - accuracy: 0.7129 - val_loss: 0.6792 - val_accuracy: 0.6945\n",
            "Epoch 19/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.6578 - accuracy: 0.7162\n",
            "Epoch 00019: val_loss improved from 0.67922 to 0.66936, saving model to ../input/model.h5\n",
            "270/270 [==============================] - 97s 358ms/step - loss: 0.6578 - accuracy: 0.7162 - val_loss: 0.6694 - val_accuracy: 0.7047\n",
            "Epoch 20/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.6545 - accuracy: 0.7097\n",
            "Epoch 00020: val_loss did not improve from 0.66936\n",
            "270/270 [==============================] - 98s 362ms/step - loss: 0.6545 - accuracy: 0.7097 - val_loss: 0.6781 - val_accuracy: 0.7010\n",
            "Epoch 21/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.6427 - accuracy: 0.7242\n",
            "Epoch 00021: val_loss improved from 0.66936 to 0.66662, saving model to ../input/model.h5\n",
            "270/270 [==============================] - 96s 355ms/step - loss: 0.6427 - accuracy: 0.7242 - val_loss: 0.6666 - val_accuracy: 0.7098\n",
            "Epoch 22/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.6404 - accuracy: 0.7232\n",
            "Epoch 00022: val_loss did not improve from 0.66662\n",
            "270/270 [==============================] - 97s 359ms/step - loss: 0.6404 - accuracy: 0.7232 - val_loss: 0.6670 - val_accuracy: 0.7052\n",
            "Epoch 23/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.6314 - accuracy: 0.7298\n",
            "Epoch 00023: val_loss did not improve from 0.66662\n",
            "270/270 [==============================] - 98s 365ms/step - loss: 0.6314 - accuracy: 0.7298 - val_loss: 0.6679 - val_accuracy: 0.7079\n",
            "Epoch 24/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.6215 - accuracy: 0.7329\n",
            "Epoch 00024: val_loss improved from 0.66662 to 0.66212, saving model to ../input/model.h5\n",
            "270/270 [==============================] - 98s 365ms/step - loss: 0.6215 - accuracy: 0.7329 - val_loss: 0.6621 - val_accuracy: 0.7172\n",
            "Epoch 25/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.6339 - accuracy: 0.7293\n",
            "Epoch 00025: val_loss improved from 0.66212 to 0.66007, saving model to ../input/model.h5\n",
            "270/270 [==============================] - 98s 363ms/step - loss: 0.6339 - accuracy: 0.7293 - val_loss: 0.6601 - val_accuracy: 0.7158\n",
            "Epoch 26/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.6142 - accuracy: 0.7339\n",
            "Epoch 00026: val_loss did not improve from 0.66007\n",
            "270/270 [==============================] - 98s 364ms/step - loss: 0.6142 - accuracy: 0.7339 - val_loss: 0.6603 - val_accuracy: 0.7190\n",
            "Epoch 27/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.6174 - accuracy: 0.7331\n",
            "Epoch 00027: val_loss improved from 0.66007 to 0.65853, saving model to ../input/model.h5\n",
            "270/270 [==============================] - 98s 364ms/step - loss: 0.6174 - accuracy: 0.7331 - val_loss: 0.6585 - val_accuracy: 0.7200\n",
            "Epoch 28/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.6042 - accuracy: 0.7433\n",
            "Epoch 00028: val_loss improved from 0.65853 to 0.65689, saving model to ../input/model.h5\n",
            "270/270 [==============================] - 97s 360ms/step - loss: 0.6042 - accuracy: 0.7433 - val_loss: 0.6569 - val_accuracy: 0.7107\n",
            "Epoch 29/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.6072 - accuracy: 0.7395\n",
            "Epoch 00029: val_loss did not improve from 0.65689\n",
            "270/270 [==============================] - 97s 360ms/step - loss: 0.6072 - accuracy: 0.7395 - val_loss: 0.6619 - val_accuracy: 0.7098\n",
            "Epoch 30/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.5997 - accuracy: 0.7471\n",
            "Epoch 00030: val_loss improved from 0.65689 to 0.65553, saving model to ../input/model.h5\n",
            "270/270 [==============================] - 97s 359ms/step - loss: 0.5997 - accuracy: 0.7471 - val_loss: 0.6555 - val_accuracy: 0.7177\n",
            "Epoch 31/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.6015 - accuracy: 0.7399\n",
            "Epoch 00031: val_loss did not improve from 0.65553\n",
            "270/270 [==============================] - 96s 355ms/step - loss: 0.6015 - accuracy: 0.7399 - val_loss: 0.6581 - val_accuracy: 0.7140\n",
            "Epoch 32/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.5930 - accuracy: 0.7464\n",
            "Epoch 00032: val_loss did not improve from 0.65553\n",
            "270/270 [==============================] - 96s 354ms/step - loss: 0.5930 - accuracy: 0.7464 - val_loss: 0.6556 - val_accuracy: 0.7167\n",
            "Epoch 33/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.5865 - accuracy: 0.7548\n",
            "Epoch 00033: val_loss did not improve from 0.65553\n",
            "270/270 [==============================] - 96s 357ms/step - loss: 0.5865 - accuracy: 0.7548 - val_loss: 0.6613 - val_accuracy: 0.7052\n",
            "Epoch 34/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.5865 - accuracy: 0.7412\n",
            "Epoch 00034: val_loss did not improve from 0.65553\n",
            "270/270 [==============================] - 97s 361ms/step - loss: 0.5865 - accuracy: 0.7412 - val_loss: 0.6615 - val_accuracy: 0.7112\n",
            "Epoch 35/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.5899 - accuracy: 0.7490\n",
            "Epoch 00035: val_loss improved from 0.65553 to 0.65399, saving model to ../input/model.h5\n",
            "270/270 [==============================] - 98s 363ms/step - loss: 0.5899 - accuracy: 0.7490 - val_loss: 0.6540 - val_accuracy: 0.7121\n",
            "Epoch 36/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.5857 - accuracy: 0.7547\n",
            "Epoch 00036: val_loss did not improve from 0.65399\n",
            "270/270 [==============================] - 97s 361ms/step - loss: 0.5857 - accuracy: 0.7547 - val_loss: 0.6551 - val_accuracy: 0.7227\n",
            "Epoch 37/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.5710 - accuracy: 0.7621\n",
            "Epoch 00037: val_loss did not improve from 0.65399\n",
            "270/270 [==============================] - 97s 358ms/step - loss: 0.5710 - accuracy: 0.7621 - val_loss: 0.6553 - val_accuracy: 0.7195\n",
            "Epoch 38/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.5745 - accuracy: 0.7607\n",
            "Epoch 00038: val_loss improved from 0.65399 to 0.64634, saving model to ../input/model.h5\n",
            "270/270 [==============================] - 96s 356ms/step - loss: 0.5745 - accuracy: 0.7607 - val_loss: 0.6463 - val_accuracy: 0.7232\n",
            "Epoch 39/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.5568 - accuracy: 0.7617\n",
            "Epoch 00039: val_loss did not improve from 0.64634\n",
            "270/270 [==============================] - 96s 356ms/step - loss: 0.5568 - accuracy: 0.7617 - val_loss: 0.6478 - val_accuracy: 0.7204\n",
            "Epoch 40/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.5596 - accuracy: 0.7617\n",
            "Epoch 00040: val_loss did not improve from 0.64634\n",
            "270/270 [==============================] - 95s 353ms/step - loss: 0.5596 - accuracy: 0.7617 - val_loss: 0.6538 - val_accuracy: 0.7200\n",
            "Epoch 41/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.5630 - accuracy: 0.7621\n",
            "Epoch 00041: val_loss improved from 0.64634 to 0.64607, saving model to ../input/model.h5\n",
            "270/270 [==============================] - 95s 353ms/step - loss: 0.5630 - accuracy: 0.7621 - val_loss: 0.6461 - val_accuracy: 0.7200\n",
            "Epoch 42/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.5598 - accuracy: 0.7600\n",
            "Epoch 00042: val_loss did not improve from 0.64607\n",
            "270/270 [==============================] - 95s 352ms/step - loss: 0.5598 - accuracy: 0.7600 - val_loss: 0.6490 - val_accuracy: 0.7227\n",
            "Epoch 43/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.5507 - accuracy: 0.7739\n",
            "Epoch 00043: val_loss improved from 0.64607 to 0.64260, saving model to ../input/model.h5\n",
            "270/270 [==============================] - 95s 352ms/step - loss: 0.5507 - accuracy: 0.7739 - val_loss: 0.6426 - val_accuracy: 0.7250\n",
            "Epoch 44/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.5483 - accuracy: 0.7666\n",
            "Epoch 00044: val_loss did not improve from 0.64260\n",
            "270/270 [==============================] - 95s 351ms/step - loss: 0.5483 - accuracy: 0.7666 - val_loss: 0.6537 - val_accuracy: 0.7177\n",
            "Epoch 45/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.5441 - accuracy: 0.7723\n",
            "Epoch 00045: val_loss did not improve from 0.64260\n",
            "270/270 [==============================] - 95s 351ms/step - loss: 0.5441 - accuracy: 0.7723 - val_loss: 0.6525 - val_accuracy: 0.7237\n",
            "Epoch 46/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.5364 - accuracy: 0.7778\n",
            "Epoch 00046: val_loss did not improve from 0.64260\n",
            "270/270 [==============================] - 95s 351ms/step - loss: 0.5364 - accuracy: 0.7778 - val_loss: 0.6523 - val_accuracy: 0.7126\n",
            "Epoch 47/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.5365 - accuracy: 0.7786\n",
            "Epoch 00047: val_loss did not improve from 0.64260\n",
            "270/270 [==============================] - 95s 350ms/step - loss: 0.5365 - accuracy: 0.7786 - val_loss: 0.6851 - val_accuracy: 0.7167\n",
            "Epoch 48/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.5421 - accuracy: 0.7752\n",
            "Epoch 00048: val_loss improved from 0.64260 to 0.64147, saving model to ../input/model.h5\n",
            "270/270 [==============================] - 95s 351ms/step - loss: 0.5421 - accuracy: 0.7752 - val_loss: 0.6415 - val_accuracy: 0.7227\n",
            "Epoch 49/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.5471 - accuracy: 0.7737\n",
            "Epoch 00049: val_loss improved from 0.64147 to 0.64093, saving model to ../input/model.h5\n",
            "270/270 [==============================] - 95s 350ms/step - loss: 0.5471 - accuracy: 0.7737 - val_loss: 0.6409 - val_accuracy: 0.7311\n",
            "Epoch 50/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.5290 - accuracy: 0.7820\n",
            "Epoch 00050: val_loss did not improve from 0.64093\n",
            "270/270 [==============================] - 96s 354ms/step - loss: 0.5290 - accuracy: 0.7820 - val_loss: 0.6546 - val_accuracy: 0.7278\n",
            "Epoch 51/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.5321 - accuracy: 0.7775\n",
            "Epoch 00051: val_loss did not improve from 0.64093\n",
            "270/270 [==============================] - 97s 358ms/step - loss: 0.5321 - accuracy: 0.7775 - val_loss: 0.6597 - val_accuracy: 0.7227\n",
            "Epoch 52/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.5331 - accuracy: 0.7812\n",
            "Epoch 00052: val_loss improved from 0.64093 to 0.64012, saving model to ../input/model.h5\n",
            "270/270 [==============================] - 98s 363ms/step - loss: 0.5331 - accuracy: 0.7812 - val_loss: 0.6401 - val_accuracy: 0.7343\n",
            "Epoch 53/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.5256 - accuracy: 0.7810\n",
            "Epoch 00053: val_loss did not improve from 0.64012\n",
            "270/270 [==============================] - 96s 356ms/step - loss: 0.5256 - accuracy: 0.7810 - val_loss: 0.6458 - val_accuracy: 0.7287\n",
            "Epoch 54/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.5239 - accuracy: 0.7797\n",
            "Epoch 00054: val_loss improved from 0.64012 to 0.63270, saving model to ../input/model.h5\n",
            "270/270 [==============================] - 95s 352ms/step - loss: 0.5239 - accuracy: 0.7797 - val_loss: 0.6327 - val_accuracy: 0.7301\n",
            "Epoch 55/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.5166 - accuracy: 0.7829\n",
            "Epoch 00055: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 95s 352ms/step - loss: 0.5166 - accuracy: 0.7829 - val_loss: 0.6412 - val_accuracy: 0.7297\n",
            "Epoch 56/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.5115 - accuracy: 0.7909\n",
            "Epoch 00056: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 95s 353ms/step - loss: 0.5115 - accuracy: 0.7909 - val_loss: 0.6615 - val_accuracy: 0.7218\n",
            "Epoch 57/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.5093 - accuracy: 0.7885\n",
            "Epoch 00057: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 95s 352ms/step - loss: 0.5093 - accuracy: 0.7885 - val_loss: 0.6375 - val_accuracy: 0.7348\n",
            "Epoch 58/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.5077 - accuracy: 0.7898\n",
            "Epoch 00058: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 96s 356ms/step - loss: 0.5077 - accuracy: 0.7898 - val_loss: 0.6438 - val_accuracy: 0.7292\n",
            "Epoch 59/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.5118 - accuracy: 0.7885\n",
            "Epoch 00059: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 96s 354ms/step - loss: 0.5118 - accuracy: 0.7885 - val_loss: 0.6391 - val_accuracy: 0.7361\n",
            "Epoch 60/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4997 - accuracy: 0.7917\n",
            "Epoch 00060: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 95s 351ms/step - loss: 0.4997 - accuracy: 0.7917 - val_loss: 0.6518 - val_accuracy: 0.7227\n",
            "Epoch 61/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.5077 - accuracy: 0.7900\n",
            "Epoch 00061: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 95s 352ms/step - loss: 0.5077 - accuracy: 0.7900 - val_loss: 0.6480 - val_accuracy: 0.7343\n",
            "Epoch 62/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4988 - accuracy: 0.7891\n",
            "Epoch 00062: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 96s 355ms/step - loss: 0.4988 - accuracy: 0.7891 - val_loss: 0.6451 - val_accuracy: 0.7292\n",
            "Epoch 63/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4955 - accuracy: 0.7976\n",
            "Epoch 00063: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 96s 355ms/step - loss: 0.4955 - accuracy: 0.7976 - val_loss: 0.6496 - val_accuracy: 0.7218\n",
            "Epoch 64/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.5008 - accuracy: 0.7936\n",
            "Epoch 00064: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 96s 356ms/step - loss: 0.5008 - accuracy: 0.7936 - val_loss: 0.6580 - val_accuracy: 0.7352\n",
            "Epoch 65/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4892 - accuracy: 0.7975\n",
            "Epoch 00065: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 97s 360ms/step - loss: 0.4892 - accuracy: 0.7975 - val_loss: 0.6562 - val_accuracy: 0.7209\n",
            "Epoch 66/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4938 - accuracy: 0.7983\n",
            "Epoch 00066: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 97s 361ms/step - loss: 0.4938 - accuracy: 0.7983 - val_loss: 0.6583 - val_accuracy: 0.7250\n",
            "Epoch 67/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4853 - accuracy: 0.7989\n",
            "Epoch 00067: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 97s 361ms/step - loss: 0.4853 - accuracy: 0.7989 - val_loss: 0.6453 - val_accuracy: 0.7375\n",
            "Epoch 68/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4921 - accuracy: 0.7965\n",
            "Epoch 00068: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 98s 362ms/step - loss: 0.4921 - accuracy: 0.7965 - val_loss: 0.6519 - val_accuracy: 0.7329\n",
            "Epoch 69/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4808 - accuracy: 0.8018\n",
            "Epoch 00069: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 100s 370ms/step - loss: 0.4808 - accuracy: 0.8018 - val_loss: 0.6608 - val_accuracy: 0.7301\n",
            "Epoch 70/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4806 - accuracy: 0.7999\n",
            "Epoch 00070: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 98s 363ms/step - loss: 0.4806 - accuracy: 0.7999 - val_loss: 0.6459 - val_accuracy: 0.7301\n",
            "Epoch 71/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4794 - accuracy: 0.8036\n",
            "Epoch 00071: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 99s 367ms/step - loss: 0.4794 - accuracy: 0.8036 - val_loss: 0.6443 - val_accuracy: 0.7375\n",
            "Epoch 72/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4726 - accuracy: 0.8108\n",
            "Epoch 00072: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 98s 364ms/step - loss: 0.4726 - accuracy: 0.8108 - val_loss: 0.6425 - val_accuracy: 0.7306\n",
            "Epoch 73/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4691 - accuracy: 0.8092\n",
            "Epoch 00073: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 98s 362ms/step - loss: 0.4691 - accuracy: 0.8092 - val_loss: 0.6361 - val_accuracy: 0.7352\n",
            "Epoch 74/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4733 - accuracy: 0.7964\n",
            "Epoch 00074: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 98s 364ms/step - loss: 0.4733 - accuracy: 0.7964 - val_loss: 0.6546 - val_accuracy: 0.7320\n",
            "Epoch 75/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4733 - accuracy: 0.8042\n",
            "Epoch 00075: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 98s 364ms/step - loss: 0.4733 - accuracy: 0.8042 - val_loss: 0.6562 - val_accuracy: 0.7338\n",
            "Epoch 76/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4730 - accuracy: 0.8035\n",
            "Epoch 00076: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 98s 362ms/step - loss: 0.4730 - accuracy: 0.8035 - val_loss: 0.6432 - val_accuracy: 0.7329\n",
            "Epoch 77/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4696 - accuracy: 0.8068\n",
            "Epoch 00077: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 99s 365ms/step - loss: 0.4696 - accuracy: 0.8068 - val_loss: 0.6450 - val_accuracy: 0.7371\n",
            "Epoch 78/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4677 - accuracy: 0.8041\n",
            "Epoch 00078: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 99s 366ms/step - loss: 0.4677 - accuracy: 0.8041 - val_loss: 0.6645 - val_accuracy: 0.7274\n",
            "Epoch 79/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4595 - accuracy: 0.8124\n",
            "Epoch 00079: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 98s 364ms/step - loss: 0.4595 - accuracy: 0.8124 - val_loss: 0.6705 - val_accuracy: 0.7338\n",
            "Epoch 80/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4521 - accuracy: 0.8189\n",
            "Epoch 00080: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 98s 362ms/step - loss: 0.4521 - accuracy: 0.8189 - val_loss: 0.6729 - val_accuracy: 0.7315\n",
            "Epoch 81/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4529 - accuracy: 0.8144\n",
            "Epoch 00081: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 99s 366ms/step - loss: 0.4529 - accuracy: 0.8144 - val_loss: 0.6541 - val_accuracy: 0.7361\n",
            "Epoch 82/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4573 - accuracy: 0.8117\n",
            "Epoch 00082: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 100s 369ms/step - loss: 0.4573 - accuracy: 0.8117 - val_loss: 0.6649 - val_accuracy: 0.7329\n",
            "Epoch 83/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4561 - accuracy: 0.8137\n",
            "Epoch 00083: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 100s 369ms/step - loss: 0.4561 - accuracy: 0.8137 - val_loss: 0.6627 - val_accuracy: 0.7361\n",
            "Epoch 84/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4467 - accuracy: 0.8196\n",
            "Epoch 00084: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 98s 364ms/step - loss: 0.4467 - accuracy: 0.8196 - val_loss: 0.6505 - val_accuracy: 0.7223\n",
            "Epoch 85/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4553 - accuracy: 0.8155\n",
            "Epoch 00085: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 97s 361ms/step - loss: 0.4553 - accuracy: 0.8155 - val_loss: 0.6480 - val_accuracy: 0.7334\n",
            "Epoch 86/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4467 - accuracy: 0.8163\n",
            "Epoch 00086: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 96s 356ms/step - loss: 0.4467 - accuracy: 0.8163 - val_loss: 0.6552 - val_accuracy: 0.7311\n",
            "Epoch 87/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4477 - accuracy: 0.8138\n",
            "Epoch 00087: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 95s 353ms/step - loss: 0.4477 - accuracy: 0.8138 - val_loss: 0.6474 - val_accuracy: 0.7343\n",
            "Epoch 88/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4528 - accuracy: 0.8173\n",
            "Epoch 00088: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 95s 352ms/step - loss: 0.4528 - accuracy: 0.8173 - val_loss: 0.6484 - val_accuracy: 0.7361\n",
            "Epoch 89/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4444 - accuracy: 0.8196\n",
            "Epoch 00089: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 95s 352ms/step - loss: 0.4444 - accuracy: 0.8196 - val_loss: 0.6703 - val_accuracy: 0.7227\n",
            "Epoch 90/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4444 - accuracy: 0.8158\n",
            "Epoch 00090: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 95s 353ms/step - loss: 0.4444 - accuracy: 0.8158 - val_loss: 0.6517 - val_accuracy: 0.7329\n",
            "Epoch 91/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4497 - accuracy: 0.8139\n",
            "Epoch 00091: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 95s 352ms/step - loss: 0.4497 - accuracy: 0.8139 - val_loss: 0.6594 - val_accuracy: 0.7320\n",
            "Epoch 92/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4387 - accuracy: 0.8196\n",
            "Epoch 00092: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 95s 351ms/step - loss: 0.4387 - accuracy: 0.8196 - val_loss: 0.6528 - val_accuracy: 0.7398\n",
            "Epoch 93/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4436 - accuracy: 0.8216\n",
            "Epoch 00093: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 95s 351ms/step - loss: 0.4436 - accuracy: 0.8216 - val_loss: 0.6509 - val_accuracy: 0.7357\n",
            "Epoch 94/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4379 - accuracy: 0.8243\n",
            "Epoch 00094: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 95s 352ms/step - loss: 0.4379 - accuracy: 0.8243 - val_loss: 0.6542 - val_accuracy: 0.7408\n",
            "Epoch 95/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4283 - accuracy: 0.8298\n",
            "Epoch 00095: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 95s 351ms/step - loss: 0.4283 - accuracy: 0.8298 - val_loss: 0.6761 - val_accuracy: 0.7324\n",
            "Epoch 96/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4188 - accuracy: 0.8293\n",
            "Epoch 00096: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 95s 352ms/step - loss: 0.4188 - accuracy: 0.8293 - val_loss: 0.6599 - val_accuracy: 0.7408\n",
            "Epoch 97/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4280 - accuracy: 0.8210\n",
            "Epoch 00097: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 99s 365ms/step - loss: 0.4280 - accuracy: 0.8210 - val_loss: 0.6559 - val_accuracy: 0.7394\n",
            "Epoch 98/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4251 - accuracy: 0.8221\n",
            "Epoch 00098: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 96s 356ms/step - loss: 0.4251 - accuracy: 0.8221 - val_loss: 0.6633 - val_accuracy: 0.7375\n",
            "Epoch 99/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4259 - accuracy: 0.8264\n",
            "Epoch 00099: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 96s 357ms/step - loss: 0.4259 - accuracy: 0.8264 - val_loss: 0.6552 - val_accuracy: 0.7361\n",
            "Epoch 100/100\n",
            "270/270 [==============================] - ETA: 0s - loss: 0.4351 - accuracy: 0.8175\n",
            "Epoch 00100: val_loss did not improve from 0.63270\n",
            "270/270 [==============================] - 97s 359ms/step - loss: 0.4351 - accuracy: 0.8175 - val_loss: 0.6533 - val_accuracy: 0.7352\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TzBA5GRFfOdT",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 74
        },
        "outputId": "b3e30c5e-c192-41ff-a440-32507a191366"
      },
      "source": [
        "scores = model.evaluate(x_test, y_test, batch_size=bs)\n",
        "print(\"Loss: \" + str(scores[0]))\n",
        "print(\"Accuracy: \" + str(scores[1]))"
      ],
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "68/68 [==============================] - 6s 94ms/step - loss: 0.6533 - accuracy: 0.7352\n",
            "Loss: 0.6533129811286926\n",
            "Accuracy: 0.7352125644683838\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "knI83WZCjNuk",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "4f9525e7-b8ac-49b0-fea2-d3fca8d8c236"
      },
      "source": [
        "model.save_weights(\"/content/model.h5\")\n",
        "print(\"Saved model to disk\")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Saved model to disk\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "u0taaw-mjrGB",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}